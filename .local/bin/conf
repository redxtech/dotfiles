#!/usr/bin/env sh

# TODO: move to proper folder
# TODO: optimize commands

# script to handle configuration file opening
main () {
  # make sure $args exits and has exactly one element
  if test -z "$1"; then
    echo "error: specify a config"
    return 1
  fi

  # open the specified config file with $EDITOR
  case $1 in
    ###############
    # User Config #
    ###############
    a|awesome|wm) # awesome
      $EDITOR "$HOME/.config/awesome/rc.lua"
      ;;
    aa|autorun) # autorun script
      $EDITOR "$HOME/.config/awesome/scripts/autorun.sh"
      ;;
    ap|picom) # compositor
      $EDITOR "$HOME/.config/picom/picom.conf"
      ;;
    ar|rofi) # launcher
      $EDITOR "$HOME/.config/rofi/config.rasi"
      ;;
    alacritty) # alacritty
      $EDITOR "$HOME/.config/alacritty/alacritty.yml"
      ;;
    k|kitty) # kitty
      $EDITOR "$HOME/.config/kitty/kitty.conf"
      ;;
    n|fetch|neofetch) # neofetch
      $EDITOR "$HOME/.config/neofetch/config.conf"
      ;;
    p|p10k) # powerlevel10k config
      $EDITOR "$HOME/.p10k.zsh"
      ;;
    r|ranger) # ranger config
      $EDITOR "$HOME/.config/ranger/rc.conf"
      ;;
    rr|rifle) # ranger rifle config
      $EDITOR "$HOME/.config/ranger/rifle.conf"
      ;;
    rs|rscope) # ranger scope config
      $EDITOR "$HOME/.config/ranger/scope.sh"
      ;;
    s|ssh) # ssh
      $EDITOR "$HOME/.ssh/config"
      ;;
    t|tmux) # tmux
      $EDITOR "$HOME/.tmux.conf"
      ;;
    v|vim|nvim|sv|space|spacevim) # vim
      $EDITOR "$HOME/.SpaceVim.d/init.toml"
      ;;
    vb|vboot|vbootstrap)
      $EDITOR "$HOME/.SpaceVim.d/autoload/bootstrap.vim"
      ;;
    w|wal|pywal) # pywal
      $EDITOR "$HOME/.local/bin/pywal"
      ;;
    z|zsh) # zsh
      $EDITOR "$HOME/.zshrc"
      ;;
    za) # zsh aliases
      $EDITOR "$HOME/.config/zsh/aliases.zsh"
      ;;
    zi) # zsh (init)
      $EDITOR "$HOME/.config/zsh/init.zsh"
      ;;
    ze) # zsh env
      $EDITOR "$HOME/.config/zsh/env.zsh"
      ;;
    zp) # zsh path
      $EDITOR "$HOME/.config/zsh/path.zsh"
      ;;
    zinit) # zinit config
      $EDITOR "$HOME/.config/zsh/zinit.zsh"
      ;;
    ####################
    # AwesomeWM Config #
    ####################
    abg) # awesome - global binds
      $EDITOR "$HOME/.config/awesome/bindings/global.lua"
      ;;
    abga) # awesome - general awesome binds
      $EDITOR "$HOME/.config/awesome/bindings/general-awesome.lua"
      ;;
    abl) # awesome - layout bindings
      $EDITOR "$HOME/.config/awesome/bindings/layout.lua"
      ;;
    abf) # awesome - focus bindings
      $EDITOR "$HOME/.config/awesome/bindings/focus.lua"
      ;;
    abt) # awesome - tags bindings
      $EDITOR "$HOME/.config/awesome/bindings/tags.lua"
      ;;
    abm) # awesome - mouse bindings
      $EDITOR "$HOME/.config/awesome/bindings/mouse.lua"
      ;;
    abc) # awesome - client bindings
      $EDITOR "$HOME/.config/awesome/bindings/client.lua"
      ;;
    amr) # awesome - rules
      $EDITOR "$HOME/.config/awesome/main/rules.lua"
      ;;
    ame) # awesome - errors
      $EDITOR "$HOME/.config/awesome/main/errors.lua"
      ;;
    amv) # awesome - variables
      $EDITOR "$HOME/.config/awesome/main/variables.lua"
      ;;
    ams) # awesome - signals
      $EDITOR "$HOME/.config/awesome/main/signals.lua"
      ;;
    amn) # awesome - notifications
      $EDITOR "$HOME/.config/awesome/main/notifications.lua"
      ;;
    aml) # awesome - layouts
      $EDITOR "$HOME/.config/awesome/main/layouts.lua"
      ;;
    ads) # awesome - statusbar
      $EDITOR "$HOME/.config/awesome/main/statusbar.lua"
      ;;
    adt) # awesome - theme
      $EDITOR "$HOME/.config/awesome/main/theme.lua"
      ;;
    adm) # awesome - menubar
      $EDITOR "$HOME/.config/awesome/main/menubar.lua"
      ;;
    adt) # awesome - titlebars
      $EDITOR "$HOME/.config/awesome/main/titlebars.lua"
      ;;
    ###############
    # Root Config #
    ###############
    ddclient|ddns) # dynamic dns - ddclient
      sudoedit /etc/ddclient/ddclient.conf
      ;;
    makepkg) # makepkg
      sudoedit /etc/makepkg.conf
      ;;
    pacman) # pacman
      sudoedit /etc/pacman.confDefault to Error 
      ;;
    sshd) # ssh daemon
      sudoedit /etc/ssh/sshd_config
      ;;
    sudo|sudoers|visudo) # sudoers
      sudo EDITOR="$EDITOR" visudo
      ;;
    ###################
    # Script Specific #
    ###################
    c|conf) # this file
      $EDITOR "$0"
      ;;
    *) # config doesn't exist
      echo "error: that config doesn't exist"
      return 1
      ;;
  esac
}

main "$@"


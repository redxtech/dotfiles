#!/usr/bin/env bash
#
# script name: conf
# description: select and open a configuration file from a rofi list
# usage: conf [<config file>]
# dependencies: rofi

# exit on first error
set -e

# list of configuration files
declare -A CONFIGS
CONFIGS=(
	###############
	# user config #
	###############
	["btop"]="$HOME/.config/btop/btop.conf"
	["dunst"]="$HOME/.config/dunst/dunstrc"
	["kitty"]="$HOME/.config/kitty/kitty.conf"
	["kitty theme"]="$HOME/.config/kitty/theme.conf"
	["mpv"]="$HOME/.config/mpv/mpv.conf"
	["mpv autoload"]="$HOME/.config/mpv/autoload.conf"
	["neofetch"]="$HOME/.config/neofetch/config.conf"
	["rofi"]="$HOME/.config/rofi/config.rasi"
	["rofi theme"]="$HOME/.config/rofi/themes/dracula.rasi"
	["ranger"]="$HOME/.config/ranger/rc.conf"
	["ranger rifle"]="$HOME/.config/ranger/rifle.conf"
	["ranger scope"]="$HOME/.config/ranger/scope.sh"
	["ssh"]="$HOME/.ssh/config"
	["tmux"]="$HOME/.tmux.conf"
	["pywal"]="$HOME/.local/bin/pywal"
	["qmk"]="$HOME/Code/qmk_firmware/keyboards/gmmk/pro/ansi/keymaps/redxtech/keymap.c"
	##############
	# vim config #
	##############
	["vim"]="$HOME/.config/nvim/lua/init.lua"
	["vim autocommands"]="$HOME/.config/nvim/lua/auto.lua"
	["vim keybinds"]="$HOME/.config/nvim/lua/binds.lua"
	["vim lsp"]="$HOME/.config/nvim/lua/lsp.lua"
	["vim options"]="$HOME/.config/nvim/lua/opts.lua"
	["vim plugins"]="$HOME/.config/nvim/lua/plugins.lua"
	################
	# shell config #
	################
	["zsh"]="$HOME/.zshrc"
	["zsh alias"]="$HOME/.config/zsh/aliases.zsh"
	["zsh init"]="$HOME/.config/zsh/init.zsh"
	["zsh env"]="$HOME/.config/zsh/env.zsh"
	["zsh path"]="$HOME/.config/zsh/path.zsh"
	["zsh zinit"]="$HOME/.config/zsh/zinit.zsh"
	["zsh prompt"]="$HOME/.config/zsh/p10k.zsh"
	#########################
	# window manager Config #
	#########################
	["bspwm"]="$HOME/.config/bspwm/bspwmrc"
	["sxhkd"]="$HOME/.config/sxhkd/sxhkdrc"
	["autorun"]="$HOME/.config/wm/scripts/autorun.sh"
	["polybar"]="$HOME/.config/polybar/themes/dracula/config.ini"
	["polybar launch"]="$HOME/.config/polybar/launch.sh"
	["polybar modules"]="$HOME/.config/polybar/modules.ini"
	["picom"]="$HOME/.config/picom/picom.conf"
	###############
	# root config #
	###############
	["ddclient"]="/etc/ddclient/ddclient.conf"
	["makepkg"]="/etc/makepkg.conf"
	["pacman"]="/etc/pacman.conf"
	["sshd"]="/etc/ssh/sshd_config"
	###################
	# script specific #
	###################
	["conf"]="$0"
)

# make list of config files
gen_confs () {
	for c in "${!CONFIGS[@]}"; do
		echo "$c => ${CONFIGS["$c"]}"
	done
}

# script to handle configuration file opening
main () {
	if test -z "$1"; then
		# get the choice of which config file
		choice="$( (gen_confs) | rofi -dmenu -no-custom -p "Configï˜½" | awk -F ' => ' '{ print $1 }')"
	else
		choice="$1"
	fi

	
	# lookup the respective command
	config=${CONFIGS["$choice"]}

	# exit if incorrect selection
	if test -z "$config"; then
		echo "invalid config"
		return 1
	fi

	# if the config path start with /etc/, use sudo to edit
	if test ! "$(echo "$config" | cut -c 1-5)" = "/etc/"; then
		# change to the directory for easy navigation
		cd "$(dirname "$config")" || exit

		# edit the file
		$EDITOR "$config"
	else
		sudoedit "$config"
	fi
}

main "$@"


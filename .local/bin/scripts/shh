#!/usr/bin/env sh

# error logging function
log_err () {
    echo "error: $*"
}

# script to manage ssh connections
main () {
    # exit if the ssh command doesn't exist
    if ! command -v ssh >/dev/null; then
        log_err "ssh command not found"
        return 1
    fi

    # make sure $1 exists and has a server
    if test -z "$1"; then
        log_err "specify a server"
        return 1
    fi

    # set up some variables
    SHH_HOSTNAME=""
    SHH_SERVER=""
    SHH_SHELL=""

    # run the specified systemctl command for nginx
    case $1 in
        seedbox|sb) # seedbox
            SHH_HOSTNAME="redxtech"
            SHH_SERVER="lw829.usbx.me"
            SHH_SHELL="PATH=\"\$PATH:\$HOME/bin\" ~/bin/zsh"
            ;;
        seedbox2|sb2) # seedbox 2
            SHH_HOSTNAME="redxtech"
            SHH_SERVER="lw820.usbx.me"
            SHH_SHELL="PATH=\"\$PATH:\$HOME/bin\" ~/bin/zsh"
            ;;
        bot|devcord) # devcord bot server
            SHH_HOSTNAME="root"
            SHH_SERVER="challenges.devcord.com"
            SHH_SHELL="zsh"
            ;;
        when|gcpwhen) # when instance on google cloud platform
            SHH_HOSTNAME="gabe_gabedunn_dev"
            SHH_SERVER="when-api.gabedunn.dev"
            SHH_SHELL="zsh"
            ;;
        various|gcpvarious|gcpv|v) # instance for various things on google cloud platform
            SHH_HOSTNAME="gabe_gabedunn_dev"
            SHH_SERVER="various.gabedunn.dev"
            SHH_SHELL="zsh"
            ;;
        invoice|invoiceninja|in) # invoice ninja instance
            SHH_HOSTNAME="gabe_gabedunn_dev"
            SHH_SERVER="invoice.gabedunn.dev"
            SHH_SHELL="zsh"
            ;;
        ryan|gcpryan) # ryandoedelmemories database on google cloud platform
            SHH_HOSTNAME="gabe_gabedunn_dev"
            SHH_SERVER="db.ryandoedelmemories.com"
            SHH_SHELL="zsh"
            ;;
        *) # default
            echo "error: that server doesn't exist"
            return 1
            ;;
    esac

    # run the ssh command
    ssh "$SHH_HOSTNAME@$SHH_SERVER" -t "$SHH_SHELL"
}

main "$@"



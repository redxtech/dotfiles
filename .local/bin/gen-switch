#!/usr/bin/env sh

ghr() {
	repo="$1"
	pattern="$2"
	output="$3"
	release="$4"

	if test -z "$release"; then
		gh release download --repo "$repo" --output "$output" --pattern "$pattern"
	else
		gh release download "$release" --repo "$repo" --output "$output" --pattern "$pattern"
	fi
}

main() {
	# get options
	cflag=1
	dflag=1
	eflag=
	fflag=1
	gflag=1
	hflag=
	kflag=1
	lflag=1
	tflag=1
	wflag=1
	zflag=

	while getopts 'cdefghklotwz' OPTION; do
		case $OPTION in
		c)
			cflag=
			;;
		d)
			dflag=
			;;
		e)
			eflag=1
			;;
		f)
			fflag=
			;;
		g)
			gflag=
			;;
		h)
			hflag=1
			;;
		k)
			kflag=
			;;
		l)
			lflag=
			;;
		t)
			tflag=
			;;
		w)
			wflag=
			;;
		z)
			zflag=1
			;;
		?)
			printf "Usage: %s [options]
      -c: skip cleanup
      -d: omit DBI
      -e: include emuNAND
      -f: omit fastCFWswitch
      -g: omit Goldleaf
      -h: include HDR
      -k: keep folder (if zipping)
      -l: omit Lockpick_RCM
      -t: omit Training Mod
      -w: omit WiFi Latency Mod
      -z: zip output a zip\n" "$(basename "$0")" >&2
			exit 2
			;;
		esac
	done

	# decide file names
	filename="SmashSD_"

	if test "$tflag"; then
		filename="${filename}Training+"
	fi
	if test "$wflag"; then
		filename="${filename}WiFi+"
	fi
	if test "$hflag"; then
		filename="${filename}HDR+"
	fi
	if test "$eflag"; then
		filename="${filename}emuNAND+"
	fi
	if test "$dflag"; then
		filename="${filename}D"
	fi
	if test "$gflag"; then
		filename="${filename}G"
	fi
	if test "$fflag"; then
		filename="${filename}F"
	fi
	if test "$lflag"; then
		filename="${filename}L"
	fi
	if test "$dflag" || test "$gflag" || test "$fflag" || test "$lflag"; then
		filename="${filename}_"
	fi

	filename="$filename$(date "+%Y-%m-%d_%R")"

	# set remote urls
	atmosphere="Atmosphere-NX/Atmosphere"
	hekate="CTCaer/hekate"
	sigpatches="https://sigmapatches.coomer.party/sigpatches.zip"
	dbi="rashevskyv/dbi"
	goldleaf="XorTroll/Goldleaf"
	lockpick="shchmue/Lockpick_RCM"
	tesla="WerWolv/Tesla-Menu"
	tesla_fork="ELY3M/Tesla-Menu"
	ovlloader="WerWolv/nx-ovlloader"
	fastcfwswitch="Hartie95/fastCFWswitch"
	skyline="skyline-dev/skyline"
	arcropolis="Raytwo/ARCropolis"
	wifi="blu-dev/arena-latency-slider"
	training="jugeeya/UltimateTrainingModpack"
	mods_drive="1GO7i5Z7D6I9EzqaZr3d9JbNiOa11QuNf"
	mods_zip="$HOME/Documents/Switch/resources/mods.zip"
	hekate_cfg="1gzdlaE2gg2HHv2d-yhjEL49PRBUrU4hz"
	fastcfwswitch_cfg_drive="1YLIC0e6PZRjgkVjK4gZh7o4hG76LnRSJ"
	exosphere_drive="1-rRQOTuVOLsDoeIAI1KTJU_lu-ymMoxH"
	hosts_drive="1UyeXK7YkMZ3P4qLth_CZQ28IKAVsiCEn"
	hekate_cfg_emu="1vsKJbf2DP-JCjhtFmTY1uZ57MeG0hsC_"
	fastcfwswitch_emu_cfg_drive="1zO84Ovp31dWTWMdQnwCXu0YGppRFaLdW"
	hdr="HDR-Development/HDR-Releases"

	# folder names
	tmpdir=".gen_switch"
	out="$tmpdir/root"
	smash_dir="$out/atmosphere/contents/01006A800016E000"

	# drive dl url
	drive="https://drive.google.com/uc?export=download&id="

	# clean out the folder
	if test -d "$tmpdir"; then
		rm -r "$tmpdir"
	fi

	# create the temp folder
	mkdir -p "$out"

	# start with atmosphere
	echo "adding atmosphere..."
	ghr "$atmosphere" "atmosphere*.zip" "$tmpdir/atmosphere.zip"
	ghr "$atmosphere" "fusee.bin" "$tmpdir/fusee.bin"
	unzip -q "$tmpdir/atmosphere.zip" -d "$out"

	# then hekate
	echo "adding hekate..."
	ghr "$hekate" "hekate*.zip" "$tmpdir/hekate.zip"
	unzip -q "$tmpdir/hekate.zip" -d "$out"
	mv "$tmpdir/fusee.bin" "$out/bootloader/payloads/fusee.bin"
	mv $out/hekate*.bin "$out/bootloader/payloads/hekate.bin"
	curl -L "$drive$hekate_cfg" -o "$out/bootloader/hekate_ipl.ini" 2>/dev/null

	# then the sigpatches
	echo "adding sigpatches..."
	curl -o "$tmpdir/sigpatches.zip" "$sigpatches" 2>/dev/null
	unzip -q "$tmpdir/sigpatches.zip" -d "$out"

	# then dbi
	if test "$dflag"; then
		echo "adding DBI..."
		dbidir="$out/switch/DBI"
		mkdir -p "$dbidir"
		ghr "$dbi" "DBI.nro" "$dbidir/DBI.nro"
		ghr "$dbi" "dbi.config" "$dbidir/dbi.config"
	fi

	# then goldleaf
	if test "$gflag"; then
		echo "adding Goldleaf..."
		ghr "$goldleaf" "Goldleaf.nro" "$out/switch/Goldleaf.nro" "0.10"
	fi

	# then lockpick
	if test "$lflag"; then
		echo "adding Lockpick_RCM..."
		ghr "$lockpick" "Lockpick_RCM.bin" "$out/bootloader/payloads/Lockpick_RCM.bin"
	fi

	# then tesla overlay and fastcfwswitch
	if test "$fflag"; then
		echo "adding fastCFWswitch..."
		if test -z "$tesla_fork"; then
			ghr "$tesla" "ovlmenu.zip" "$tmpdir/ovlmenu.zip"
			unzip -q "$tmpdir/ovlmenu.zip" -d "$out"
		else
			mkdir -p "$out/switch/.overlays"
			ghr "$tesla_fork" "ovlmenu.ovl" "$out/switch/.overlays/ovlmenu.ovl"
		fi
		ghr "$ovlloader" "nx-ovlloader.zip" "$tmpdir/nx-ovlloader.zip"
		ghr "$fastcfwswitch" "fastCFWswitch*.zip" "$tmpdir/fastCFWswitch.zip"
		unzip -q "$tmpdir/nx-ovlloader.zip" -d "$out"
		unzip -q "$tmpdir/fastCFWswitch.zip" -d "$out"
		curl -L "$drive$fastcfwswitch_cfg_drive" -o "$out/config/fastCFWSwitch/config.ini" 2>/dev/null
	fi

	# then HDR
	if test "$hflag"; then
		echo "adding HDR..."
		ghr "$hdr" "switch-package.zip" "$tmpdir/hdr.zip"
		unzip -q "$tmpdir/hdr.zip" -d "$out"
		mv "$smash_dir" "$smash_dir-hdr"
		mv "$out/ultimate" "$out/ultimate-hdr"
	fi

	# then skyline
	echo "adding skyline..."
	ghr "$skyline" "skyline.zip" "$tmpdir/skyline.zip" "beta"
	mkdir -p "$smash_dir"
	unzip -q "$tmpdir/skyline.zip" -d "$smash_dir"

	# then arcropolis
	echo "adding ARCropolis..."
	ghr "$arcropolis" "release.zip" "$tmpdir/arcropolis.zip"
	unzip -q "$tmpdir/arcropolis.zip" -d "$out"

	# then wifi mod
	if test "$wflag"; then
		echo "adding WiFi mod..."
		ghr "$wifi" "release.zip" "$tmpdir/wifi.zip"
		unzip -q "$tmpdir/wifi.zip" -d "$out"
	fi

	# then training mod
	if test "$tflag"; then
		echo "adding training mod..."
		ghr "$training" "TrainingModpack.zip" "$tmpdir/training.zip"
		unzip -q "$tmpdir/training.zip" -d "$out"
	fi

	# then skin mods
	echo "adding skin mods..."
	if test -z "$mods_zip"; then
		curl -L "$drive$mods_drive" -o "$tmpdir/mods.zip" 2>/dev/null
		unzip -q "$tmpdir/mods.zip" -d "$out"
	else
		unzip -q "$mods_zip" -d "$out"
	fi

	# then emuNAND
	if test "$eflag"; then
		echo "adding emuNAND..."
		curl -L "$drive$hekate_cfg_emu" -o "$out/bootloader/hekate_ipl.ini" 2>/dev/null
		if test "$fflag"; then
			curl -L "$drive$fastcfwswitch_emu_cfg_drive" -o "$out/config/fastCFWSwitch/config.ini" 2>/dev/null
		fi

		echo "adding nintendo hosts blocking..."
		mkdir -p "$out/atmosphere/hosts"
		curl -L "$drive$hosts_drive" -o "$out/atmosphere/hosts/default.txt" 2>/dev/null
		curl -L "$drive$exosphere_drive" -o "$out/exosphere.ini" 2>/dev/null

	fi

	# move out folder
	mv "$out" "$filename"

	# then zip
	if test "$zflag"; then
		echo "zipping folder..."
		zip --quiet -r "$filename.zip" "$filename"
		if test "$kflag"; then
			rm -r "$filename"
		fi
		echo "$filename.zip created!"
	else
		echo "$filename created!"
	fi

	# clean up temp folder
	if test "$cflag"; then
		rm -r "$tmpdir"
	fi
}

main "$@"
